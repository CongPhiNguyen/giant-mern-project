{"version":3,"file":"static/js/303.89e84e83.chunk.js","mappings":"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","sources":["album/components/Album/AlbumDisplayer.js","album/components/Album/AlbumPreviewPane.js","album/shared/components/ViewHeading.js","album/pages/Album/AlbumsViewing.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./AlbumDisplayer.scss\";\r\n\r\nexport default function AlbumDisplayer(props) {\r\n  // console.log(props);\r\n  return (\r\n    <div className={`displayer-container ${props.selected ? \"selected\" : \"\"}`}>\r\n      <div className=\"image-symbols\">\r\n        <img\r\n          className=\"image-left\"\r\n          src=\"https://i.pinimg.com/736x/d2/ef/c9/d2efc90c6c6cfba0349971aa14f2f9e3.jpg\"\r\n        ></img>\r\n        <div className=\"images-right\">\r\n          <img\r\n            className=\"image-right image-top\"\r\n            src=\"https://i.pinimg.com/736x/ec/46/21/ec46213ad67b7041fdbbda30ae363df1.jpg\"\r\n          ></img>\r\n          <img\r\n            className=\"image-right image-bottom\"\r\n            src=\"https://i.pinimg.com/564x/bd/51/57/bd51576c1ad0511ad7f462c5fd8a8e3f.jpg\"\r\n          ></img>\r\n        </div>\r\n      </div>\r\n      <p className=\"name-tag\">{props.album.albumName}</p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./AlbumPreviewPane.scss\";\r\n\r\nimport axios from \"axios\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport API from \"../../../config/API\";\r\n\r\nexport default function PreviewPane(props) {\r\n  console.log(props.albumInfo);\r\n  // console.log(props.albumInfo?.haveAlbums?.length);\r\n\r\n  const [ownAlbumInfo, setOwnAlbumInfo] = useState({});\r\n\r\n  const calculateTime = (timeString) => {\r\n    const postTime = new Date(timeString);\r\n    var diff = Math.abs(new Date() - postTime);\r\n    if (diff < 1000 * 60) {\r\n      return \"0 minutes ago\";\r\n    } else if (diff < 1000 * 60 * 60) {\r\n      return Math.floor(diff / 1000 / 60) + \" minutes ago\";\r\n    } else if (diff < 1000 * 60 * 60 * 24) {\r\n      return Math.floor(diff / 1000 / 60 / 60) + \" hours ago\";\r\n    } else if (diff < 1000 * 60 * 60 * 24 * 30) {\r\n      return Math.floor(diff / 1000 / 60 / 60 / 24) + \" days ago\";\r\n    } else if (diff < 1000 * 60 * 60 * 24 * 365) {\r\n      return Math.floor(diff / 1000 / 60 / 60 / 24 / 30) + \" months ago\";\r\n    } else {\r\n      return Math.floor(diff / 1000 / 60 / 60 / 24 / 365) + \" years ago\";\r\n    }\r\n  };\r\n  //TODO: Làm một hàm tính ngày và thời gian để sử dụng chung ở đây\r\n  const toReadAbleDate = (dateString) => {\r\n    const splitInfo = dateString.slice(0, 10).split(\"-\");\r\n    return splitInfo[2] + \"/\" + splitInfo[1] + \"/\" + splitInfo[0];\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getUserInformationByID = (id) => {\r\n      axios.defaults.withCredentials = true;\r\n      const url = API.PREFIX_URL + \"/api/user/\";\r\n      axios\r\n        .get(url + id)\r\n        .then((data) => {\r\n          setOwnAlbumInfo(data.data.data);\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"err\", err);\r\n        });\r\n    };\r\n    if (props.albumInfo?.ownPeople)\r\n      getUserInformationByID(props.albumInfo?.ownPeople);\r\n  }, [props.albumInfo]);\r\n\r\n  // console.log(\"ownAlbumInfo\", ownAlbumInfo);\r\n  return (\r\n    <CSSTransition\r\n      in={props.display}\r\n      timeout={200}\r\n      classNames=\"slide-right\"\r\n      mountOnEnter\r\n      unmountOnExit\r\n    >\r\n      <div className=\"preview-pane-controller\">\r\n        <div\r\n          className=\"preview-pane-close noselect\"\r\n          onClick={() => props.closePreviewPane()}\r\n        >\r\n          X\r\n        </div>\r\n        <section className=\"information-detail information-section\">\r\n          <p className=\"title\">Details</p>\r\n          <div className=\"divider\"></div>\r\n          <p className=\"information-concrete\">\r\n            <label className=\"information-label\">Children albums:</label>\r\n            {props.albumInfo?.haveAlbums?.length ?? \" Không xác định\"}\r\n          </p>\r\n          <p className=\"information-concrete\">\r\n            <label className=\"information-label\">Total images:</label>\r\n            {props.albumInfo?.haveImages?.length ?? \" Không xác định\"}\r\n          </p>\r\n          <p className=\"information-concrete\">\r\n            <label className=\"information-label\">Storage:</label>\r\n            {props.albumInfo?.storage ?? \" Không xác định\"}\r\n          </p>\r\n          <p className=\"information-concrete\">\r\n            <label className=\"information-label\">Lastchange :</label>\r\n            {props.albumInfo?.updatedAt\r\n              ? toReadAbleDate(props.albumInfo?.updatedAt) +\r\n                \" \" +\r\n                calculateTime(props.albumInfo?.updatedAt)\r\n              : \"Không xác định\"}\r\n          </p>\r\n        </section>\r\n        <section className=\"information-attribute information-section\">\r\n          <p className=\"title\">Attribute</p>\r\n          <div className=\"divider\"></div>\r\n          <p className=\"information-concrete\">\r\n            <label className=\"information-label\">Own by:</label>\r\n            <img className=\"own-avatar\" src={ownAlbumInfo?.avatarURL}></img>\r\n            <p className=\"own-username\">{ownAlbumInfo?.username || \"\"}</p>\r\n          </p>\r\n          <p className=\"information-concrete\">\r\n            <label className=\"information-label\">Description:</label>\r\n            {props.albumInfo?.description}\r\n          </p>\r\n          <p className=\"information-concrete\">\r\n            <label className=\"information-label\">Location:</label>\r\n            {`${ownAlbumInfo?.username}/${props.albumInfo?.albumName}`}\r\n          </p>\r\n        </section>\r\n        <section className=\"information-permission information-section\">\r\n          <p className=\"title\">Permission</p>\r\n          <div className=\"divider\"></div>\r\n          <p className=\"information-concrete\">\r\n            <label className=\"information-label\">ShareList:</label>\r\n            {props.albumInfo?.viewedPeople.length +\r\n              \" people viewed this album\" ?? \"\"}\r\n          </p>\r\n        </section>\r\n      </div>\r\n    </CSSTransition>\r\n  );\r\n}\r\n","import React, { createRef } from \"react\";\r\nimport \"./ViewHeading.scss\";\r\nimport { useSelector } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { useEffect } from \"react\";\r\nimport { setToSearchImage } from \"../../imageSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport API from \"../../../config/API\";\r\nexport default function ViewHeading(props) {\r\n  console.log(props);\r\n  const dispatch = useDispatch();\r\n\r\n  const userInfo = useSelector(\r\n    (state) => state.sharedSlice.currentUserInformation\r\n  );\r\n\r\n  const searchInfo = useSelector((state) => state.imageSlice.search);\r\n\r\n  const searchBoxRef = createRef();\r\n  const searchForName = () => {\r\n    if (props.type == \"image\" && props.permit == \"own\") {\r\n      axios.defaults.withCredentials = true;\r\n      const url = API.PREFIX_URL + \"/api/image/own/search\";\r\n      const paramToSearch = { userID: userInfo._id };\r\n      axios\r\n        .get(url, {\r\n          params: {\r\n            namePattern: searchBoxRef.current.value,\r\n          },\r\n        })\r\n        .then((data) => {\r\n          console.log(\"data\", data);\r\n          dispatch(\r\n            setToSearchImage({\r\n              isSearching: true,\r\n              module: \"ownImage\",\r\n              searchValue: data.data.data,\r\n            })\r\n          );\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"err\", err);\r\n        });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setToSearchImage({\r\n      isSearching: false,\r\n      module: \"\",\r\n      searchValue: [],\r\n    });\r\n  }, []);\r\n  return (\r\n    <div className=\"view-heading-app-container\">\r\n      <div className=\"search-bar\">\r\n        <input type=\"text\" className=\"search-bar-box\" ref={searchBoxRef} />\r\n        <select name=\"search-option\" id=\"search-option\">\r\n          <option value=\"saab\">By name</option>\r\n          <option value=\"volvo\">By date</option>\r\n        </select>\r\n        <button\r\n          className=\"search\"\r\n          onClick={() => {\r\n            searchForName();\r\n          }}\r\n        >\r\n          Search\r\n        </button>\r\n      </div>\r\n      <div className=\"add-new-container\">{props.buttonAdd}</div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./AlbumsViewing.scss\";\r\nimport axios from \"axios\";\r\n\r\nimport AlbumDisplayer from \"../../components/Album/AlbumDisplayer\";\r\nimport AlbumPreviewPane from \"../../components/Album/AlbumPreviewPane\";\r\nimport ViewHeading from \"../../shared/components/ViewHeading\";\r\n\r\nimport { useDispatch } from \"react-redux/es/hooks/useDispatch\";\r\nimport { showModal } from \"../../../shared/modals/ModalSlice\";\r\nimport API from \"../../../config/API\";\r\n\r\nexport default function AlbumsViewing() {\r\n  const dispatch = useDispatch();\r\n\r\n  const [albumsInfo, setAlbumsInfo] = useState([]);\r\n  const [albumsSelectedIndex, setAlbumsSelectedIndex] = useState(-1);\r\n  const [isDisplayPreviewPane, setDisplayPreviewPane] = useState(false);\r\n\r\n  const userInfo = useSelector(\r\n    (state) => state.sharedSlice.currentUserInformation\r\n  );\r\n\r\n  useEffect(() => {\r\n    const getAllUserAlbums = () => {\r\n      axios\r\n        .get(\r\n          API.PREFIX_URL + \"/api/album/get-all-user-album\",\r\n          { params: { username: userInfo.username } },\r\n          { withCredentials: true }\r\n        )\r\n        .then((data) => {\r\n          console.log(\"data\", data);\r\n          setAlbumsInfo(data.data.albumList);\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"err\", err);\r\n        });\r\n    };\r\n    if (userInfo.username) {\r\n      getAllUserAlbums();\r\n    }\r\n  }, [userInfo.username]);\r\n\r\n  const closePreviewPane = () => {\r\n    setDisplayPreviewPane(false);\r\n  };\r\n\r\n  const displayModal = () => {\r\n    dispatch(showModal(\"Add new album\"));\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: \"flex\" }}>\r\n      <div className=\"page-container\">\r\n        <div className=\"view-heading-container\">\r\n          <ViewHeading\r\n            buttonAdd={\r\n              <button className=\"add-new\" onClick={displayModal}>\r\n                Add new album\r\n              </button>\r\n            }\r\n          />\r\n        </div>\r\n\r\n        <div className=\"content-container\">\r\n          <div\r\n            className=\"album-list\"\r\n            onClick={() => {\r\n              setAlbumsSelectedIndex(-1);\r\n              setDisplayPreviewPane(false);\r\n            }}\r\n          >\r\n            {albumsInfo?.map((album, index) => (\r\n              <div\r\n                onClick={(e) => {\r\n                  e.stopPropagation();\r\n                  setAlbumsSelectedIndex(index);\r\n                  setDisplayPreviewPane(true);\r\n                }}\r\n              >\r\n                <AlbumDisplayer\r\n                  album={album}\r\n                  key={index}\r\n                  selected={index === albumsSelectedIndex}\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <AlbumPreviewPane\r\n        closePreviewPane={closePreviewPane}\r\n        display={isDisplayPreviewPane}\r\n        albumInfo={albumsInfo[albumsSelectedIndex]}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"],"names":["AlbumDisplayer","props","className","selected","src","album","albumName","PreviewPane","console","log","albumInfo","useState","ownAlbumInfo","setOwnAlbumInfo","useEffect","ownPeople","id","axios","url","API","then","data","catch","err","getUserInformationByID","CSSTransition","in","display","timeout","classNames","mountOnEnter","unmountOnExit","onClick","closePreviewPane","haveAlbums","length","haveImages","storage","updatedAt","dateString","splitInfo","slice","split","toReadAbleDate","timeString","postTime","Date","diff","Math","abs","floor","calculateTime","avatarURL","username","description","viewedPeople","ViewHeading","dispatch","useDispatch","userInfo","useSelector","state","sharedSlice","currentUserInformation","searchBoxRef","imageSlice","search","createRef","setToSearchImage","isSearching","module","searchValue","type","ref","name","value","permit","_id","params","namePattern","current","searchForName","buttonAdd","AlbumsViewing","albumsInfo","setAlbumsInfo","albumsSelectedIndex","setAlbumsSelectedIndex","isDisplayPreviewPane","setDisplayPreviewPane","withCredentials","albumList","style","showModal","map","index","e","stopPropagation"],"sourceRoot":""}