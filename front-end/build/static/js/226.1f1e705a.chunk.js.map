{"version":3,"file":"static/js/226.1f1e705a.chunk.js","mappings":"0RAee,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAGjB,IAFiBC,EAAAA,EAAAA,OAEqCC,EAAAA,EAAAA,WAAS,IAA/D,eAAOC,EAAP,KAA6BC,EAA7B,KACA,GAAsDF,EAAAA,EAAAA,WAAU,GAAhE,eAAOG,EAAP,KAA4BC,EAA5B,KAEMC,GAAmBC,EAAAA,EAAAA,KACvB,SAACC,GAAD,OAAWA,EAAMC,WAAWH,gBAA5B,IAGII,GAAWH,EAAAA,EAAAA,KACf,SAACC,GAAD,OAAWA,EAAMG,YAAYC,sBAA7B,IAGIC,GAAaN,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,WAAWK,MAA5B,KAE/BC,EAAAA,EAAAA,YAAU,WAENC,IAAAA,IAEIC,EAAAA,EAAAA,WAAiB,gCACjB,CAAEC,OAAQ,CAAEC,OAAQT,EAASU,MAC7B,CAAEC,iBAAiB,IAEpBC,MAAK,SAACC,GACLC,QAAQC,IAAI,OAAQF,GACpBzB,GAAS4B,EAAAA,EAAAA,IAAoBH,EAAKA,KAAKI,WACxC,IACAC,OAAM,SAACC,GACNL,QAAQC,IAAI,MAAOI,EACpB,GAGN,GAAE,CAACnB,EAASU,MAYb,OACE,iBAAKU,MAAO,CAAEC,QAAS,QAAvB,WACE,iBAAKC,UAAU,iBAAf,WACE,gBAAKA,UAAU,yBAAf,UACE,SAACC,EAAA,EAAD,OAEF,gBAAKD,UAAU,oBAAf,UACE,gBACEA,UAAU,aACVE,QAAS,WACP7B,GAAwB,GACxBF,GAAsB,EACvB,EALH,UAOIU,EAAWsB,aAAoC,YAArBtB,EAAWuB,OACnCvB,EAAWwB,YACX/B,GACFgC,KAAI,SAACC,EAAOC,GAAR,OACJ,gBACEN,QAAS,SAACO,GACRA,EAAEC,kBACFrC,EAAuBmC,GACvBrC,GAAsB,EACvB,EALH,UAOE,SAACwC,EAAA,EAAD,CACEhB,UAAWY,EACXK,SAAUJ,IAAUpC,KAVpB,YAiBZ,SAACyC,EAAA,EAAD,CACEC,iBA7CmB,WACvB3C,GAAsB,EACvB,EA4CK4B,QAAS7B,EACTyB,UACEd,EAAWsB,aAAoC,YAArBtB,EAAWuB,OACjCvB,EAAWwB,YAAYjC,GACvBE,EAAiBF,GAEvB2C,YA9CsB,SAACP,GAC3BnC,EAAuBmC,EACxB,MAgDF,C","sources":["album/pages/Image/ViewImage/ImagesViewing.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"./ImagesViewing.scss\";\r\n\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport ImageDisplayer from \"../../../components/Image/ViewImage/ImageDisplayer\";\r\nimport ImagePreviewPane from \"../../../components/Image/ImagePreviewPane\";\r\nimport ImageGroupDisplayer from \"../../../components/Image/ImageGroupDisplayer\";\r\nimport ViewHeadingImage from \"../../../components/Image/Search/ViewHeadingImage\";\r\nimport API from \"../../../../config/API\";\r\n// Redux\r\nimport { setCurrentOwnImages } from \"../../../imageSlice\";\r\n\r\nexport default function ImagesViewing() {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const [isDisplayPreviewPane, setDisplayPreviewPane] = useState(false);\r\n  const [imagesSelectedIndex, setImagesSelectedIndex] = useState(-1);\r\n\r\n  const currentOwnImages = useSelector(\r\n    (state) => state.imageSlice.currentOwnImages\r\n  );\r\n\r\n  const userInfo = useSelector(\r\n    (state) => state.sharedSlice.currentUserInformation\r\n  );\r\n\r\n  const searchInfo = useSelector((state) => state.imageSlice.search);\r\n\r\n  useEffect(() => {\r\n    const getAllUserOwnImage = () => {\r\n      axios\r\n        .get(\r\n          API.PREFIX_URL + \"/api/image/get-all-own-images\",\r\n          { params: { userID: userInfo._id } },\r\n          { withCredentials: true }\r\n        )\r\n        .then((data) => {\r\n          console.log(\"data\", data);\r\n          dispatch(setCurrentOwnImages(data.data.imageInfo));\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"err\", err);\r\n        });\r\n    };\r\n    getAllUserOwnImage();\r\n  }, [userInfo._id]);\r\n\r\n  const closePreviewPane = () => {\r\n    setDisplayPreviewPane(false);\r\n  };\r\n\r\n  // console.log(\"userInfo\", userInfo);\r\n\r\n  const changeCurrrentIndex = (index) => {\r\n    setImagesSelectedIndex(index);\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: \"flex\" }}>\r\n      <div className=\"page-container\">\r\n        <div className=\"view-heading-container\">\r\n          <ViewHeadingImage></ViewHeadingImage>\r\n        </div>\r\n        <div className=\"content-container\">\r\n          <div\r\n            className=\"image-list\"\r\n            onClick={() => {\r\n              setImagesSelectedIndex(-1);\r\n              setDisplayPreviewPane(false);\r\n            }}\r\n          >\r\n            {(searchInfo.isSearching && searchInfo.module == \"ownImage\"\r\n              ? searchInfo.searchValue\r\n              : currentOwnImages\r\n            ).map((value, index) => (\r\n              <div\r\n                onClick={(e) => {\r\n                  e.stopPropagation();\r\n                  setImagesSelectedIndex(index);\r\n                  setDisplayPreviewPane(true);\r\n                }}\r\n              >\r\n                <ImageDisplayer\r\n                  imageInfo={value}\r\n                  selected={index === imagesSelectedIndex}\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <ImagePreviewPane\r\n        closePreviewPane={closePreviewPane}\r\n        display={isDisplayPreviewPane}\r\n        imageInfo={\r\n          searchInfo.isSearching && searchInfo.module == \"ownImage\"\r\n            ? searchInfo.searchValue[imagesSelectedIndex]\r\n            : currentOwnImages[imagesSelectedIndex]\r\n        }\r\n        changeIndex={changeCurrrentIndex}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"],"names":["ImagesViewing","dispatch","useDispatch","useNavigate","useState","isDisplayPreviewPane","setDisplayPreviewPane","imagesSelectedIndex","setImagesSelectedIndex","currentOwnImages","useSelector","state","imageSlice","userInfo","sharedSlice","currentUserInformation","searchInfo","search","useEffect","axios","API","params","userID","_id","withCredentials","then","data","console","log","setCurrentOwnImages","imageInfo","catch","err","style","display","className","ViewHeadingImage","onClick","isSearching","module","searchValue","map","value","index","e","stopPropagation","ImageDisplayer","selected","ImagePreviewPane","closePreviewPane","changeIndex"],"sourceRoot":""}